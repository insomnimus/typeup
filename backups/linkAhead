func (p *Parser) linkAhead() (*ast.Anchor, bool) {
	if p.ch != '[' {
		return nil, false
	}
	var text, href strings.Builder
	var char rune
	var idx int
	for i := p.readpos; i < len(p.doc); i++ {
		char = p.doc[i]
		if char == '\n' {
			return nil, false
		}
		if char == ']' {
			idx = i + 1
			break
		}
		text.WriteRune(char)
	}
	if unicode.IsSpace(p.doc[idx]) {
		return nil, false
	}
	for i := idx; i < len(p.doc); i++ {
		char = p.doc[i]
		if unicode.IsSpace(char) {
			p.setPos(i)
			break
		}
		href.WriteRune(char)
	}
	return &ast.Anchor{
		Text: processText(text.String()),
		URL:  href.String(),
	}, true
}